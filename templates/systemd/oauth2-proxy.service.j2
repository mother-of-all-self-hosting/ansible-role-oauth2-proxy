{#
SPDX-FileCopyrightText: 2024 Slavi Pantaleev

SPDX-License-Identifier: AGPL-3.0-or-later
#}

#jinja2: lstrip_blocks: "True"
[Unit]
Description=OAuth2-proxy ({{ oauth2_proxy_identifier }})
{% for service in oauth2_proxy_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in oauth2_proxy_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ oauth2_proxy_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ oauth2_proxy_identifier }} 2>/dev/null || true'

ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
      --rm \
      --name={{ oauth2_proxy_identifier }} \
      --log-driver=none \
      --user={{ oauth2_proxy_uid }}:{{ oauth2_proxy_gid }} \
      --cap-drop=ALL \
      --read-only \
      --network={{ oauth2_proxy_container_network }} \
      {% if oauth2_proxy_container_http_bind_port %}
      -p {{ oauth2_proxy_container_http_bind_port }}:{{ oauth2_proxy_environment_variable_http_address }} \
      {% endif %}
      --env-file={{ oauth2_proxy_base_path }}/env \
      --label-file={{ oauth2_proxy_base_path }}/labels \
      {% for volume in oauth2_proxy_container_additional_volumes %}
      --mount type={{ volume.type | default('bind' if '/' in volume.src else 'volume') }},src={{ volume.src }},dst={{ volume.dst }}{{ (',' + volume.options) if volume.options | default('') else '' }} \
      {% endfor %}
      {% for arg in oauth2_proxy_container_extra_arguments %}
      {{ arg }} \
      {% endfor %}
      {{ oauth2_proxy_container_image }}

{% for network in oauth2_proxy_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ oauth2_proxy_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ oauth2_proxy_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ oauth2_proxy_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ oauth2_proxy_identifier }} 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier={{ oauth2_proxy_identifier }}

[Install]
WantedBy=multi-user.target
